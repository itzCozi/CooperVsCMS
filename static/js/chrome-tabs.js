document.title="CUB",((t,e)=>{"function"==typeof define&&define.amd?define(["draggabilly"],i=>e(t,i)):"object"==typeof module&&module.exports?module.exports=e(t,require("draggabilly")):t.ChromeTabs=e(t,t.Draggabilly)})(window,(t,e)=>{let i=19,s=t=>{},a=0,n=1,r=t.location.href,l={title:r,favicon:!0};class o{constructor(){this.draggabillies=[]}init(t){this.hypertabContainer=t,this.instanceId=a,this.hypertabContainer.setAttribute("data-chrome-tabs-instance-id",this.instanceId),a+=1,this.setupCustomProperties(),this.setupStyleEl(),this.setupEvents(),this.layoutTabs(),this.setupDraggabilly()}emit(t,e){this.hypertabContainer.dispatchEvent(new CustomEvent(t,{detail:e}))}setupCustomProperties(){this.hypertabContainer.style.setProperty("--tab-content-margin","9px")}setupStyleEl(){this.styleEl=document.createElement("style"),this.hypertabContainer.appendChild(this.styleEl)}setupEvents(){t.addEventListener("resize",t=>{this.cleanUpPreviouslyDraggedTabs(),this.layoutTabs()}),this.hypertabContainer.addEventListener("dblclick",t=>{[this.hypertabContainer,this.tabContentEl].includes(t.target)&&newTab("ht://newtab")}),this.tabEls.forEach(t=>this.setTabCloseEventListener(t))}get tabEls(){return Array.prototype.slice.call(this.hypertabContainer.querySelectorAll(".chrome-tab"))}get pinTabEls(){return Array.prototype.slice.call(this.hypertabContainer.querySelectorAll(".chrome-tab.pin"))}get nonPinTabEls(){return Array.prototype.slice.call(this.hypertabContainer.querySelectorAll(".chrome-tab:not(.chrome-tab.pin)"))}get tabContentEl(){return this.hypertabContainer.querySelector(".chrome-tabs-content")}get tabContentWidths(){let t=this.tabEls.length,e=this.pinTabEls.length,i=this.nonPinTabEls.length,s=this.tabContentEl.clientWidth-29*e,a=(i+.137*e-1)*1,n=Math.floor(Math.max(23,Math.min(240,(s-18+a)/i))),r=[],l=s-(3*n*9-a);for(let o=0;o<t;++o)if(this.tabEls[o].classList.contains("pin"))r.push(this.tabEls[o].getBoundingClientRect().width);else{let h=n<240&&l>0?1:0;r.push(n+h),l>0&&(l-=1)}return r}get tabContentPositions(){let t=[],e=[],i=this.tabContentWidths,s=9;return i.forEach((i,a)=>{e.push(i),47==e[a-1]&&(s-=18),t.push(s-1*a),s+=i}),t}get tabPositions(){let t=[];return this.tabContentPositions.forEach(e=>{t.push(e-9)}),t}updateTabButton(){let e=12;0!=document.getElementById(0).children.length&&[...document.getElementById("0").children].forEach(t=>{e+=t.clientWidth-19}),e<=t.innerWidth-47.88&&!(this.tabEls.length>=12)?document.getElementById("createTab").setAttribute("style","margin-left:"+e+"px"):document.getElementById("createTab").setAttribute("style","margin-left:"+(t.innerWidth-30)+"px")}layoutTabs(){let t=this.tabContentWidths;this.tabEls.forEach((e,i)=>{let s=t[i];e.style.width=s+18+"px",e.removeAttribute("is-small"),e.removeAttribute("is-smaller"),e.removeAttribute("is-mini"),s<83&&e.setAttribute("is-small",""),s<58&&e.setAttribute("is-smaller",""),s<47&&e.setAttribute("is-mini","")});let e="";this.tabPositions.forEach((t,i)=>{e+=`
                  .chrome-tabs[data-chrome-tabs-instance-id="${this.instanceId}"] .chrome-tab:nth-child(${i+1}) {
                    transform: translate3d(${t}px, 0, 0)
                  }
                `}),this.styleEl.innerHTML=e,this.updateTabButton()}createNewTabEl(){let t=document.createElement("div");return t.innerHTML=`<div ifd="${n++}"class="chrome-tab" onclick="opencity('${n}')">
              <div class="chrome-tab-dividers"></div>
              <div class="chrome-tab-background">
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg"><defs><symbol id="chrome-tab-geometry-left" viewBox="0 0 214 36"><path d="M17 0h197v36H0v-2c4.5 0 9-3.5 9-8V8c0-4.5 3.5-8 8-8z"/></symbol><symbol id="chrome-tab-geometry-right" viewBox="0 0 214 36"><use xlink:href="#chrome-tab-geometry-left"/></symbol><clipPath id="crop"><rect class="mask" width="100%" height="100%" x="0"/></clipPath></defs><svg width="52%" height="100%"><use xlink:href="#chrome-tab-geometry-left" width="214" height="36" class="chrome-tab-geometry"/></svg><g transform="scale(-1, 1)"><svg width="52%" height="100%" x="-100%" y="0"><use xlink:href="#chrome-tab-geometry-right" width="214" height="36" class="chrome-tab-geometry"/></svg></g></svg>
              </div>
              <div class="chrome-tab-content">
                <div class="chrome-tab-favicon" ></div>
                <div class="chrome-tab-title ${n}"></div>
                <div class="chrome-tab-drag-handle"></div>
                <div class="chrome-tab-close" onclick="document.getElementById(${n}).remove()"></div>
              </div>
            </div>`,t.firstElementChild}addTab(t,{animate:e=!0,background:i=!1}={}){let s=this.createNewTabEl();e&&(s.classList.add("chrome-tab-was-just-added"),setTimeout(()=>s.classList.remove("chrome-tab-was-just-added"),500)),s.addEventListener("contextmenu",function(t){ctxTab=this.attributes[0].value,document.getElementById("ctx").style.left=t.clientX+"px",document.getElementById("ctx").style.top=t.clientY+"px",document.querySelector(`div[ifd="${+ctxTab}"]`).hasAttribute("tab-is-pinned")?(document.getElementById("pin").textContent="Unpin tab",document.getElementById("pin").setAttribute("onclick","toggleId('ctx');chromeTabs.unpinTab(ctxTab);")):(document.getElementById("pin").textContent="Pin tab",document.getElementById("pin").setAttribute("onclick","toggleId('ctx');chromeTabs.pinTab(ctxTab);")),openMenu("ctx"),t.preventDefault()},!1),t=Object.assign({},l,t),this.tabContentEl.appendChild(s),this.setTabCloseEventListener(s),this.updateTab(s,t),this.emit("tabAdd",{tabEl:s}),i||this.setCurrentTab(s),this.cleanUpPreviouslyDraggedTabs(),this.layoutTabs(),this.setupDraggabilly()}setTabCloseEventListener(t){t.querySelector(".chrome-tab-close").addEventListener("click",e=>{e.stopPropagation(),this.removeTab(t)})}get activeTabEl(){return this.hypertabContainer.querySelector(".chrome-tab[active]")}hasActiveTab(){return!!this.activeTabEl}setCurrentTab(t){let e=this.activeTabEl;e!==t&&(e&&e.removeAttribute("active"),t.setAttribute("active",""),this.emit("activeTabChange",{tabEl:t}))}removeTab(t){if(t===this.activeTabEl){if(t.nextElementSibling){let e=+t.nextElementSibling.getAttribute("ifd")+1;document.getElementById(e).style="display:inlinebackground: #FFFFFF",this.setCurrentTab(t.nextElementSibling)}else if(t.previousElementSibling){let i=+t.previousElementSibling.getAttribute("ifd")+1;document.getElementById(i).style="display:inlinebackground: #FFFFFF",this.setCurrentTab(t.previousElementSibling)}}t.parentNode.removeChild(t),this.emit("tabRemove",{tabEl:t}),this.cleanUpPreviouslyDraggedTabs(),this.layoutTabs(),this.setupDraggabilly(),getActiveFrameId()&&setInfo(getActiveFrameId())}updateTab(t,e){t.querySelector(".chrome-tab-title").textContent=e.title;let i=t.querySelector(".chrome-tab-favicon");e.favicon?(i.style.backgroundImage=`url('${e.favicon}')`,i.removeAttribute("hidden","")):(i.setAttribute("hidden",""),i.removeAttribute("style")),e.url,e.id&&t.setAttribute("data-tab-id",e.id)}cleanUpPreviouslyDraggedTabs(){this.tabEls.forEach(t=>t.classList.remove("chrome-tab-was-just-dragged"))}pinTab(t){let e=document.querySelector(`div[ifd="${+t}"]`),i=JSON.parse(localStorage.getItem("ctPins")),s=document.getElementById(+t+1);if(localStorage.getItem("ctPins")){if("update"==t){let a=0;i={},this.pinTabEls.forEach(t=>{t.setAttribute("tab-is-pinned",a),i[a]={url:document.getElementById(+t.getAttribute("ifd")+1).contentDocument.URL},a++})}else e.hasAttribute("tab-is-pinned")?i[+e.getAttribute("tab-is-pinned")]={url:s.contentDocument.URL}:(i[Object.keys(i).length+1]={url:s.contentDocument.URL},e.setAttribute("tab-is-pinned",Object.keys(i).length),e.classList.add("pin"))}else(i={})[0]={url:s.contentDocument.URL},e.setAttribute("tab-is-pinned",Object.keys(i).length-1),e.classList.add("pin");console.log("pin tab modification",s,e),localStorage.setItem("ctPins",JSON.stringify(i)),this.layoutTabs()}unpinTab(t){let e=document.querySelector(`div[ifd="${+t}"]`),i=JSON.parse(localStorage.getItem("ctPins"));delete i[+e.getAttribute("tab-is-pinned")],e.removeAttribute("tab-is-pinned"),e.setAttribute("class","chrome-tab");let s=0;i={},this.pinTabEls.forEach(t=>{t.setAttribute("tab-is-pinned",s),i[s]={url:document.getElementById(+t.getAttribute("ifd")+1).contentDocument.URL},s++}),localStorage.setItem("ctPins",JSON.stringify(i)),this.layoutTabs()}setupDraggabilly(){let t=this.tabEls,i=this.tabPositions;this.isDragging&&(this.isDragging=!1,this.hypertabContainer.classList.remove("chrome-tabs-is-sorting"),this.draggabillyDragging.element.classList.remove("chrome-tab-is-dragging"),this.draggabillyDragging.element.style.transform="",this.draggabillyDragging.dragEnd(),this.draggabillyDragging.isDragging=!1,this.draggabillyDragging.positionDrag=s,this.draggabillyDragging.destroy(),this.draggabillyDragging=null),this.draggabillies.forEach(t=>t.destroy()),t.forEach((t,s)=>{let a=i[s],n=new e(t,{axis:"x",handle:".chrome-tab-drag-handle",containment:this.tabContentEl});this.draggabillies.push(n),n.on("pointerDown",e=>{opencity(+t.getAttribute("ifd")+1),this.setCurrentTab(t)}),n.on("dragStart",e=>{this.isDragging=!0,this.draggabillyDragging=n,t.classList.add("chrome-tab-is-dragging"),this.hypertabContainer.classList.add("chrome-tabs-is-sorting")}),n.on("dragEnd",e=>{t.hasAttribute("tab-is-pinned")&&this.pinTab("update"),this.isDragging=!1;let i=parseFloat(t.style.left,10);t.style.transform="translate3d(0, 0, 0)",requestAnimationFrame(e=>{t.style.left="0",t.style.transform=`translate3d(${i}px, 0, 0)`,requestAnimationFrame(e=>{t.classList.remove("chrome-tab-is-dragging"),this.hypertabContainer.classList.remove("chrome-tabs-is-sorting"),t.classList.add("chrome-tab-was-just-dragged"),requestAnimationFrame(e=>{t.style.transform="",this.layoutTabs(),this.setupDraggabilly()})})})}),n.on("dragMove",(e,s,n)=>{let r=this.tabEls,l=r.indexOf(t),o=a+n.x,h=closest(o,i),b=Math.max(0,Math.min(r.length,h));l!==b&&this.animateTabMove(t,l,b)})})}animateTabMove(t,e,i){i<e?t.parentNode.insertBefore(t,this.tabEls[i]):t.parentNode.insertBefore(t,this.tabEls[i+1]),this.emit("tabReorder",{tabEl:t,originIndex:e,destinationIndex:i}),this.layoutTabs()}}return o});